# nginx.conf with enhanced debugging
events {
    worker_connections 1024;
}

http {
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';
    
    # Enhanced log format for debugging routing
    log_format debug '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for" '
    'Host: "$host" Server: "$server_name" URI: "$uri"';
    
    access_log /dev/stdout debug; # Use debug format
    error_log /dev/stderr debug;   # Enable debug level logging

    # Resolver for external DNS lookups (to bypass Docker DNS)
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # Define upstream for your mock service
    upstream mock_service {
        server mock-github-api:443;
    }

    # Define upstream for real GitHub (using IP to bypass Docker DNS)
    upstream real_github_api {
        server github.com:443;
        keepalive 32;
    }

    upstream real_github_git {
        server github.com:443;
        keepalive 32;
    }

    # Main server block that listens on port 443 (SSL) - DEFAULT for github.com
    server {
        listen 443 ssl http2 default_server;
        server_name github.com;
        
        # Fix for large headers from upstream
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;

        # SSL configuration (self-signed cert for testing)
        ssl_certificate /etc/nginx/certs/github.crt;
        ssl_certificate_key /etc/nginx/certs/github.key;
        ssl_protocols TLSv1.2 TLSv1.3;

        # PASSTHROUGH: GitHub Actions downloads (highest priority)
        location ~ ^/actions/ {
            # Use variable to force DNS resolution at request time
            set $github_actions "github.com";
            proxy_pass https://$github_actions;
            
            proxy_set_header Host github.com;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Remove the mock authorization header for public actions
            proxy_set_header Authorization "";
            
            proxy_ssl_verify off;
            proxy_ssl_server_name on;
            
            # Git-specific settings for action downloads
            proxy_buffering off;
            proxy_request_buffering off;
            client_max_body_size 0;
            
            # Handle redirects
            proxy_redirect https://github.com/ /;
            
            add_header X-Nginx-Route "github-actions" always;
        }

		# https://api.github.com/repos/test-org/test-repo/pulls/123/files
        # INTERCEPT: API requests for pull request files (on github.com - original location)
        location ~ ^/repos/([^/]+)/([^/]+)/pulls/([0-9]+)/files$ {
            access_log /dev/stdout debug;
            error_log /dev/stderr debug;
            
            proxy_pass https://mock_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Add custom header to identify mocked requests
            proxy_set_header X-Mock-Request "true";
            proxy_set_header X-Mock-Type "pull-files";
            
            add_header X-Nginx-Route "mock-pull-files-github" always;
        }

        # INTERCEPT: API requests for issue comments (on github.com - original location)
        location ~ ^/repos/([^/]+)/([^/]+)/issues/([0-9]+)/comments$ {
            access_log /dev/stdout debug;
            error_log /dev/stderr debug;
            
            proxy_pass https://mock_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Add custom header to identify mocked requests
            proxy_set_header X-Mock-Request "true";
            proxy_set_header X-Mock-Type "issue-comments";
            
            add_header X-Nginx-Route "mock-issue-comments-github" always;
        }

        # PASSTHROUGH: Git operations to real GitHub (updated pattern)
        location ~* /(info/refs|git-upload-pack|git-receive-pack) {
            # Use variable to force DNS resolution at request time
            set $github_git "github.com";
            proxy_pass https://$github_git;
            
            proxy_set_header Host github.com;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_ssl_verify off;
            proxy_ssl_server_name on;
            
            # Git-specific settings
            proxy_buffering off;
            proxy_request_buffering off;
            client_max_body_size 0;
            
            add_header X-Nginx-Route "github-git" always;
        }

        # PASSTHROUGH: Everything else to real GitHub
        location / {
            # Use variable to force DNS resolution at request time
            set $github "github.com";
            proxy_pass https://$github;
            
            proxy_set_header Host github.com;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_ssl_verify off;
            proxy_ssl_server_name on;
            
            # Handle redirects
            proxy_redirect https://github.com/ /;
            
            add_header X-Nginx-Route "github-passthrough" always;
        }
    }

    # NEW: Separate server block for api.github.com
    server {
        listen 443 ssl http2;
        server_name api.github.com;
        
        # Fix for large headers from upstream
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;

        # SSL configuration (same cert should work for testing)
        ssl_certificate /etc/nginx/certs/github.crt;
        ssl_certificate_key /etc/nginx/certs/github.key;
        ssl_protocols TLSv1.2 TLSv1.3;

        # INTERCEPT: API requests for pull request files
        location ~ ^/repos/([^/]+)/([^/]+)/pulls/([0-9]+)/files$ {
            access_log /dev/stdout debug;
            error_log /dev/stderr debug;
            
            proxy_pass https://mock_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_set_header X-Mock-Request "true";
            proxy_set_header X-Mock-Type "pull-files";
            
            add_header X-Nginx-Route "api-mock-pull-files" always;
        }

        # INTERCEPT: API requests for issue comments  
        location ~ ^/repos/([^/]+)/([^/]+)/issues/([0-9]+)/comments$ {
            access_log /dev/stdout debug;
            error_log /dev/stderr debug;
            
            proxy_pass https://mock_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_set_header X-Mock-Request "true";
            proxy_set_header X-Mock-Type "issue-comments";
            
            add_header X-Nginx-Route "api-mock-issue-comments" always;
        }

		# INTERCEPT: API requests for repository issues (GET and POST)
		location ~ ^/repos/([^/]+)/([^/]+)/issues$ {
    		access_log /dev/stdout debug;
    		error_log /dev/stderr debug;
    
			proxy_pass https://mock_service;
    		proxy_set_header Host $host;
    		proxy_set_header X-Real-IP $remote_addr;
    		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    		proxy_set_header X-Forwarded-Proto $scheme;
    
			proxy_set_header X-Mock-Request "true";
    		proxy_set_header X-Mock-Type "repo-issues";
    
			add_header X-Nginx-Route "mock-repo-issues" always;
		}

		# INTERCEPT: Commit status creation  
		location ~ ^/repos/([^/]+)/([^/]+)/statuses/([a-f0-9]+)$ {
			access_log /dev/stdout debug;
			error_log /dev/stderr debug;

			proxy_pass https://mock_service;
    		proxy_set_header X-Mock-Type "commit-status";
    		add_header X-Nginx-Route "mock-commit-status" always;
		}

		# INTERCEPT: Pull request details (single PR, not files)
		location ~ ^/repos/([^/]+)/([^/]+)/pulls/([0-9]+)$ {
    		proxy_pass https://mock_service;
    		proxy_set_header X-Mock-Type "pull-details"; 
    		add_header X-Nginx-Route "mock-pull-details" always;
		}

        # PASSTHROUGH: All other API requests to real GitHub API
        location / {
            access_log /dev/stdout debug;
            error_log /dev/stderr debug;
            
            set $github_api "api.github.com";
            proxy_pass https://$github_api;
            
            proxy_set_header Host api.github.com;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_ssl_verify off;
            proxy_ssl_server_name on;
            
            add_header X-Nginx-Route "api-github-passthrough" always;
        }
    }

    # HTTP to HTTPS redirect
    server {
        proxy_busy_buffers_size   512k;
        proxy_buffers   4 512k;
        proxy_buffer_size   256k;
        listen 80;
        server_name github.com api.github.com;
        return 301 https://$server_name$request_uri;
    }
}